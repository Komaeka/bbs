package zhonger.cancer.bbs.model;

import java.util.ArrayList;
import java.util.List;

public class UserLikeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public UserLikeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("ACCOUNT_ID is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("ACCOUNT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(String value) {
            addCriterion("ACCOUNT_ID =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(String value) {
            addCriterion("ACCOUNT_ID <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(String value) {
            addCriterion("ACCOUNT_ID >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_ID >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(String value) {
            addCriterion("ACCOUNT_ID <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_ID <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLike(String value) {
            addCriterion("ACCOUNT_ID like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotLike(String value) {
            addCriterion("ACCOUNT_ID not like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<String> values) {
            addCriterion("ACCOUNT_ID in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<String> values) {
            addCriterion("ACCOUNT_ID not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(String value1, String value2) {
            addCriterion("ACCOUNT_ID between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_ID not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andGalgameIsNull() {
            addCriterion("galgame is null");
            return (Criteria) this;
        }

        public Criteria andGalgameIsNotNull() {
            addCriterion("galgame is not null");
            return (Criteria) this;
        }

        public Criteria andGalgameEqualTo(Integer value) {
            addCriterion("galgame =", value, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameNotEqualTo(Integer value) {
            addCriterion("galgame <>", value, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameGreaterThan(Integer value) {
            addCriterion("galgame >", value, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameGreaterThanOrEqualTo(Integer value) {
            addCriterion("galgame >=", value, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameLessThan(Integer value) {
            addCriterion("galgame <", value, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameLessThanOrEqualTo(Integer value) {
            addCriterion("galgame <=", value, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameIn(List<Integer> values) {
            addCriterion("galgame in", values, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameNotIn(List<Integer> values) {
            addCriterion("galgame not in", values, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameBetween(Integer value1, Integer value2) {
            addCriterion("galgame between", value1, value2, "galgame");
            return (Criteria) this;
        }

        public Criteria andGalgameNotBetween(Integer value1, Integer value2) {
            addCriterion("galgame not between", value1, value2, "galgame");
            return (Criteria) this;
        }

        public Criteria andAnimationIsNull() {
            addCriterion("animation is null");
            return (Criteria) this;
        }

        public Criteria andAnimationIsNotNull() {
            addCriterion("animation is not null");
            return (Criteria) this;
        }

        public Criteria andAnimationEqualTo(Integer value) {
            addCriterion("animation =", value, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationNotEqualTo(Integer value) {
            addCriterion("animation <>", value, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationGreaterThan(Integer value) {
            addCriterion("animation >", value, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationGreaterThanOrEqualTo(Integer value) {
            addCriterion("animation >=", value, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationLessThan(Integer value) {
            addCriterion("animation <", value, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationLessThanOrEqualTo(Integer value) {
            addCriterion("animation <=", value, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationIn(List<Integer> values) {
            addCriterion("animation in", values, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationNotIn(List<Integer> values) {
            addCriterion("animation not in", values, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationBetween(Integer value1, Integer value2) {
            addCriterion("animation between", value1, value2, "animation");
            return (Criteria) this;
        }

        public Criteria andAnimationNotBetween(Integer value1, Integer value2) {
            addCriterion("animation not between", value1, value2, "animation");
            return (Criteria) this;
        }

        public Criteria andFantasyIsNull() {
            addCriterion("fantasy is null");
            return (Criteria) this;
        }

        public Criteria andFantasyIsNotNull() {
            addCriterion("fantasy is not null");
            return (Criteria) this;
        }

        public Criteria andFantasyEqualTo(Integer value) {
            addCriterion("fantasy =", value, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyNotEqualTo(Integer value) {
            addCriterion("fantasy <>", value, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyGreaterThan(Integer value) {
            addCriterion("fantasy >", value, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyGreaterThanOrEqualTo(Integer value) {
            addCriterion("fantasy >=", value, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyLessThan(Integer value) {
            addCriterion("fantasy <", value, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyLessThanOrEqualTo(Integer value) {
            addCriterion("fantasy <=", value, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyIn(List<Integer> values) {
            addCriterion("fantasy in", values, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyNotIn(List<Integer> values) {
            addCriterion("fantasy not in", values, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyBetween(Integer value1, Integer value2) {
            addCriterion("fantasy between", value1, value2, "fantasy");
            return (Criteria) this;
        }

        public Criteria andFantasyNotBetween(Integer value1, Integer value2) {
            addCriterion("fantasy not between", value1, value2, "fantasy");
            return (Criteria) this;
        }

        public Criteria andImaginaryIsNull() {
            addCriterion("imaginary is null");
            return (Criteria) this;
        }

        public Criteria andImaginaryIsNotNull() {
            addCriterion("imaginary is not null");
            return (Criteria) this;
        }

        public Criteria andImaginaryEqualTo(Integer value) {
            addCriterion("imaginary =", value, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryNotEqualTo(Integer value) {
            addCriterion("imaginary <>", value, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryGreaterThan(Integer value) {
            addCriterion("imaginary >", value, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("imaginary >=", value, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryLessThan(Integer value) {
            addCriterion("imaginary <", value, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryLessThanOrEqualTo(Integer value) {
            addCriterion("imaginary <=", value, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryIn(List<Integer> values) {
            addCriterion("imaginary in", values, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryNotIn(List<Integer> values) {
            addCriterion("imaginary not in", values, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryBetween(Integer value1, Integer value2) {
            addCriterion("imaginary between", value1, value2, "imaginary");
            return (Criteria) this;
        }

        public Criteria andImaginaryNotBetween(Integer value1, Integer value2) {
            addCriterion("imaginary not between", value1, value2, "imaginary");
            return (Criteria) this;
        }

        public Criteria andBloodIsNull() {
            addCriterion("blood is null");
            return (Criteria) this;
        }

        public Criteria andBloodIsNotNull() {
            addCriterion("blood is not null");
            return (Criteria) this;
        }

        public Criteria andBloodEqualTo(Integer value) {
            addCriterion("blood =", value, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodNotEqualTo(Integer value) {
            addCriterion("blood <>", value, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodGreaterThan(Integer value) {
            addCriterion("blood >", value, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodGreaterThanOrEqualTo(Integer value) {
            addCriterion("blood >=", value, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodLessThan(Integer value) {
            addCriterion("blood <", value, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodLessThanOrEqualTo(Integer value) {
            addCriterion("blood <=", value, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodIn(List<Integer> values) {
            addCriterion("blood in", values, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodNotIn(List<Integer> values) {
            addCriterion("blood not in", values, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodBetween(Integer value1, Integer value2) {
            addCriterion("blood between", value1, value2, "blood");
            return (Criteria) this;
        }

        public Criteria andBloodNotBetween(Integer value1, Integer value2) {
            addCriterion("blood not between", value1, value2, "blood");
            return (Criteria) this;
        }

        public Criteria andCuteIsNull() {
            addCriterion("cute is null");
            return (Criteria) this;
        }

        public Criteria andCuteIsNotNull() {
            addCriterion("cute is not null");
            return (Criteria) this;
        }

        public Criteria andCuteEqualTo(Integer value) {
            addCriterion("cute =", value, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteNotEqualTo(Integer value) {
            addCriterion("cute <>", value, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteGreaterThan(Integer value) {
            addCriterion("cute >", value, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteGreaterThanOrEqualTo(Integer value) {
            addCriterion("cute >=", value, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteLessThan(Integer value) {
            addCriterion("cute <", value, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteLessThanOrEqualTo(Integer value) {
            addCriterion("cute <=", value, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteIn(List<Integer> values) {
            addCriterion("cute in", values, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteNotIn(List<Integer> values) {
            addCriterion("cute not in", values, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteBetween(Integer value1, Integer value2) {
            addCriterion("cute between", value1, value2, "cute");
            return (Criteria) this;
        }

        public Criteria andCuteNotBetween(Integer value1, Integer value2) {
            addCriterion("cute not between", value1, value2, "cute");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryIsNull() {
            addCriterion("lachrymatory is null");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryIsNotNull() {
            addCriterion("lachrymatory is not null");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryEqualTo(Integer value) {
            addCriterion("lachrymatory =", value, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryNotEqualTo(Integer value) {
            addCriterion("lachrymatory <>", value, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryGreaterThan(Integer value) {
            addCriterion("lachrymatory >", value, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryGreaterThanOrEqualTo(Integer value) {
            addCriterion("lachrymatory >=", value, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryLessThan(Integer value) {
            addCriterion("lachrymatory <", value, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryLessThanOrEqualTo(Integer value) {
            addCriterion("lachrymatory <=", value, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryIn(List<Integer> values) {
            addCriterion("lachrymatory in", values, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryNotIn(List<Integer> values) {
            addCriterion("lachrymatory not in", values, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryBetween(Integer value1, Integer value2) {
            addCriterion("lachrymatory between", value1, value2, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andLachrymatoryNotBetween(Integer value1, Integer value2) {
            addCriterion("lachrymatory not between", value1, value2, "lachrymatory");
            return (Criteria) this;
        }

        public Criteria andCrossingIsNull() {
            addCriterion("crossing is null");
            return (Criteria) this;
        }

        public Criteria andCrossingIsNotNull() {
            addCriterion("crossing is not null");
            return (Criteria) this;
        }

        public Criteria andCrossingEqualTo(Integer value) {
            addCriterion("crossing =", value, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingNotEqualTo(Integer value) {
            addCriterion("crossing <>", value, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingGreaterThan(Integer value) {
            addCriterion("crossing >", value, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingGreaterThanOrEqualTo(Integer value) {
            addCriterion("crossing >=", value, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingLessThan(Integer value) {
            addCriterion("crossing <", value, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingLessThanOrEqualTo(Integer value) {
            addCriterion("crossing <=", value, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingIn(List<Integer> values) {
            addCriterion("crossing in", values, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingNotIn(List<Integer> values) {
            addCriterion("crossing not in", values, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingBetween(Integer value1, Integer value2) {
            addCriterion("crossing between", value1, value2, "crossing");
            return (Criteria) this;
        }

        public Criteria andCrossingNotBetween(Integer value1, Integer value2) {
            addCriterion("crossing not between", value1, value2, "crossing");
            return (Criteria) this;
        }

        public Criteria andCampusIsNull() {
            addCriterion("campus is null");
            return (Criteria) this;
        }

        public Criteria andCampusIsNotNull() {
            addCriterion("campus is not null");
            return (Criteria) this;
        }

        public Criteria andCampusEqualTo(Integer value) {
            addCriterion("campus =", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotEqualTo(Integer value) {
            addCriterion("campus <>", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusGreaterThan(Integer value) {
            addCriterion("campus >", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusGreaterThanOrEqualTo(Integer value) {
            addCriterion("campus >=", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusLessThan(Integer value) {
            addCriterion("campus <", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusLessThanOrEqualTo(Integer value) {
            addCriterion("campus <=", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusIn(List<Integer> values) {
            addCriterion("campus in", values, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotIn(List<Integer> values) {
            addCriterion("campus not in", values, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusBetween(Integer value1, Integer value2) {
            addCriterion("campus between", value1, value2, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotBetween(Integer value1, Integer value2) {
            addCriterion("campus not between", value1, value2, "campus");
            return (Criteria) this;
        }

        public Criteria andComedyIsNull() {
            addCriterion("comedy is null");
            return (Criteria) this;
        }

        public Criteria andComedyIsNotNull() {
            addCriterion("comedy is not null");
            return (Criteria) this;
        }

        public Criteria andComedyEqualTo(Integer value) {
            addCriterion("comedy =", value, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyNotEqualTo(Integer value) {
            addCriterion("comedy <>", value, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyGreaterThan(Integer value) {
            addCriterion("comedy >", value, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyGreaterThanOrEqualTo(Integer value) {
            addCriterion("comedy >=", value, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyLessThan(Integer value) {
            addCriterion("comedy <", value, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyLessThanOrEqualTo(Integer value) {
            addCriterion("comedy <=", value, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyIn(List<Integer> values) {
            addCriterion("comedy in", values, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyNotIn(List<Integer> values) {
            addCriterion("comedy not in", values, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyBetween(Integer value1, Integer value2) {
            addCriterion("comedy between", value1, value2, "comedy");
            return (Criteria) this;
        }

        public Criteria andComedyNotBetween(Integer value1, Integer value2) {
            addCriterion("comedy not between", value1, value2, "comedy");
            return (Criteria) this;
        }

        public Criteria andMatoryIsNull() {
            addCriterion("matory is null");
            return (Criteria) this;
        }

        public Criteria andMatoryIsNotNull() {
            addCriterion("matory is not null");
            return (Criteria) this;
        }

        public Criteria andMatoryEqualTo(Integer value) {
            addCriterion("matory =", value, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryNotEqualTo(Integer value) {
            addCriterion("matory <>", value, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryGreaterThan(Integer value) {
            addCriterion("matory >", value, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryGreaterThanOrEqualTo(Integer value) {
            addCriterion("matory >=", value, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryLessThan(Integer value) {
            addCriterion("matory <", value, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryLessThanOrEqualTo(Integer value) {
            addCriterion("matory <=", value, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryIn(List<Integer> values) {
            addCriterion("matory in", values, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryNotIn(List<Integer> values) {
            addCriterion("matory not in", values, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryBetween(Integer value1, Integer value2) {
            addCriterion("matory between", value1, value2, "matory");
            return (Criteria) this;
        }

        public Criteria andMatoryNotBetween(Integer value1, Integer value2) {
            addCriterion("matory not between", value1, value2, "matory");
            return (Criteria) this;
        }

        public Criteria andBattleIsNull() {
            addCriterion("battle is null");
            return (Criteria) this;
        }

        public Criteria andBattleIsNotNull() {
            addCriterion("battle is not null");
            return (Criteria) this;
        }

        public Criteria andBattleEqualTo(Integer value) {
            addCriterion("battle =", value, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleNotEqualTo(Integer value) {
            addCriterion("battle <>", value, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleGreaterThan(Integer value) {
            addCriterion("battle >", value, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleGreaterThanOrEqualTo(Integer value) {
            addCriterion("battle >=", value, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleLessThan(Integer value) {
            addCriterion("battle <", value, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleLessThanOrEqualTo(Integer value) {
            addCriterion("battle <=", value, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleIn(List<Integer> values) {
            addCriterion("battle in", values, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleNotIn(List<Integer> values) {
            addCriterion("battle not in", values, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleBetween(Integer value1, Integer value2) {
            addCriterion("battle between", value1, value2, "battle");
            return (Criteria) this;
        }

        public Criteria andBattleNotBetween(Integer value1, Integer value2) {
            addCriterion("battle not between", value1, value2, "battle");
            return (Criteria) this;
        }

        public Criteria andMagicIsNull() {
            addCriterion("magic is null");
            return (Criteria) this;
        }

        public Criteria andMagicIsNotNull() {
            addCriterion("magic is not null");
            return (Criteria) this;
        }

        public Criteria andMagicEqualTo(Integer value) {
            addCriterion("magic =", value, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicNotEqualTo(Integer value) {
            addCriterion("magic <>", value, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicGreaterThan(Integer value) {
            addCriterion("magic >", value, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicGreaterThanOrEqualTo(Integer value) {
            addCriterion("magic >=", value, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicLessThan(Integer value) {
            addCriterion("magic <", value, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicLessThanOrEqualTo(Integer value) {
            addCriterion("magic <=", value, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicIn(List<Integer> values) {
            addCriterion("magic in", values, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicNotIn(List<Integer> values) {
            addCriterion("magic not in", values, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicBetween(Integer value1, Integer value2) {
            addCriterion("magic between", value1, value2, "magic");
            return (Criteria) this;
        }

        public Criteria andMagicNotBetween(Integer value1, Integer value2) {
            addCriterion("magic not between", value1, value2, "magic");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userlike
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 19 13:47:30 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userlike
     *
     * @mbg.generated Mon Apr 19 13:47:30 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}